plugins {
    id "io.spring.dependency-management" version "1.1.6" apply false
    id 'test-report-aggregation'
    id 'idea'
}

ext {
    funktionstjansterGrpSchemasVersion = "2.0.0.1"
    intygClinicalprocessSchemasVersion = "1.0.24.1"
    rivtaGetPersonsPersonSchemasVersion = "3.1.1.1"
    rivtaStoreLogSchemasVersion = "2.0.1.1"
    schemasContractVersion = "2.1.8.1"
    schemasSupportVersion = "2.1.5.1"
    srsSchemasVersion = "0.0.16.1"

    commonsIoVersion = "2.14.0"
    commonsCollectionsVersion = "4.4"
    cxfVersion = "4.0.3"
    cxfPluginVersion = "4.0.0"
    embeddedRedisVersion = "0.7.2"
    guavaVersion = "32.1.3-jre"
    jakartaJwsApiVersion = "3.0.0"
    jaxb2Version = "3.0.0"
    jaxb2NamespacePrefixVersion = "2.0"
    saxonVersion = "12.3"
    shedlockSpringVersion = "4.46.0"
    springSecuritySaml2CoreVersion = "1.0.3.RELEASE" //Higher versions require opensaml 2.6.6 (not available 2020-03-23)
    uapVersion = "1.5.3"
    xmlSecVersion = "4.0.0"
    xmlWsRtVersion = "4.0.2"

    springbootMavenBomVersion = "3.3.4"
}

allprojects {
    apply plugin: 'se.inera.intyg.plugin.common'
    apply plugin: "io.spring.dependency-management"
    apply plugin: 'maven-publish'
    apply plugin: 'java'

    group = 'se.inera.intyg.infra'
    version = System.properties['buildVersion'] ?: '4.0.0-SNAPSHOT'
    sourceCompatibility = 21
    targetCompatibility = 21

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springbootMavenBomVersion}"
        }
    }

    dependencies {
        implementation "ch.qos.logback:logback-classic"
        implementation "jakarta.annotation:jakarta.annotation-api"
        implementation "jakarta.jws:jakarta.jws-api:${jakartaJwsApiVersion}"
        implementation "jakarta.xml.ws:jakarta.xml.ws-api"

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        testImplementation "junit:junit"
        testImplementation "org.glassfish.jaxb:jaxb-runtime"
        testImplementation "org.junit.jupiter:junit-jupiter-api"
        testImplementation "org.junit.jupiter:junit-jupiter-params"
        testImplementation "org.mockito:mockito-core"
        testImplementation "org.mockito:mockito-junit-jupiter"
        testImplementation "org.springframework:spring-test"

        testCompileOnly "org.projectlombok:lombok"
        testAnnotationProcessor "org.projectlombok:lombok"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
        testRuntimeOnly "org.junit.vintage:junit-vintage-engine"
    }

    tasks.register("install") {
        description("Publishes artifact to local maven repository.")
        dependsOn(publishToMavenLocal)
    }

    compileJava.options.encoding = 'UTF-8'
    jar.duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    test { useJUnitPlatform() }

    repositories {
        mavenLocal()
        maven { url "https://nexus.drift.inera.se/repository/it-public/" }
        mavenCentral {
            content {
                excludeGroupByRegex "se\\.inera.*"
            }
        }
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from components.java
            }
        }
        repositories.maven {
            url = uri("https://nexus.drift.inera.se/repository/maven-releases/")
            credentials {
                username = System.properties['ineraNexusUsername']
                password = System.properties['ineraNexusPassword']
            }
        }
    }
}

subprojects.collect {subproject -> subproject.name }.each { subprojectName ->
    dependencies { testReportAggregation project(":${subprojectName}") }
}