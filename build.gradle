plugins {
    id "se.inera.intyg.plugin.common" version "1.0.61" apply false
}

ext {
    funktionstjansterGrpSchemasVersion = "1.0.4"

    rivtaDirectoryOrganizationSchemasVersion = "1.1.RC5.4"
    rivtaEhrLogstoreSchemasVersion = "1.2.4"
    rivtaHsaAuthorizationmanagementSchemasVersion = "1.0.RC4.4"
    rivtaHsaEmployeeSchemasVersion = "1.0.RC4.4"
    rivtaResidentMasterSchemasVersion = "1.1.3.5"
    rivtaGetPersonsPersonSchemasVersion = "3.0-beta1"

    srsSchemasVersion = "0.0.7"

    schemasContractVersion = "2.1.5"

    chronicleMapVersion = "3.13.0"
    commonsLangVersion = "3.1"
    cxfVersion = "3.1.3"
    guavaVersion = "14.0.1"
    hamcrestVersion = "1.3"
    igniteSpringVersion = "1.8.0"
    jacksonDataformatVersion = "2.4.5"
    jacksonVersion = "2.8.1"
    logbackVersion = "1.0.11"
    servletApiVersion = "2.5"
    slf4jVersion = "1.7.21"
    springSecuritySaml2CoreVersion = "1.0.1.RELEASE"
    springSecurityVersion = "4.0.3.RELEASE"
    springVersion = "4.2.2.RELEASE"

    mockitoVersion = "1.9.0"
    servletApiTestVersion = "3.1.0"
}

allprojects {
    apply plugin: 'se.inera.intyg.plugin.common'
    apply plugin: 'maven'

    repositories {
        mavenLocal()
        maven { url "https://build-inera.nordicmedtest.se/nexus/repository/releases/" }
        maven { url "http://repo.maven.apache.org/maven2" }
    }

    dependencies {
        testCompile "junit:junit:4.+"
        testCompile "org.springframework:spring-test:${springVersion}"
        testCompile "org.mockito:mockito-core:${mockitoVersion}"
    }

    group = 'se.inera.intyg.infra'
    version = System.properties['buildVersion'] ?: '0-SNAPSHOT'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    task createVersionPropertyFile(type: VersionPropertyFileTask)

    uploadArchives.repositories.mavenDeployer {
        repository(url: "https://build-inera.nordicmedtest.se/nexus/repository/releases/") {
            authentication(userName: System.properties['nexusUsername'], password: System.properties['nexusPassword'])
        }
    }
}

task tagRelease(type: TagReleaseTask)
