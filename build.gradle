plugins {
  id 'org.ajoberstar.grgit' version '1.5.1'
}

ext.nexusUsername = System.properties['nexusUsername']
ext.nexusPassword = System.properties['nexusPassword']

ext {
  rivtaClinicalprocessVersion = "2.0.RC5.2"
  rivtaEhrLogstoreVersion = "1.2.2"
  rivtaInsuranceprocessVersion = "3.1.0.2"
  rivtaItintegrationMonitoringVersion = "1.0.0.2"
  rivtaHsaAuthorizationmanagementVersion = "1.0.RC4.2"
  rivtaHsaEmployeeVersion = "1.0.RC4.2"
  rivtaHsaOrganizationVersion = "1.1.RC5.2"
  intygClinicalprocessVersion = "1.0.2"
  intygInsuranceprocessVersion = "1.0.2"
  intygTransportstyrelsenVersion = "1.0.2"
  intygPrivatepractitionerVersion = "1.0.2"

  jacksonVersion = "2.8.1"
}

allprojects  {
  apply plugin: 'maven'
  apply plugin: 'org.ajoberstar.grgit'

  def baseVersion = '0.0.'

  group = 'se.inera.intyg.common'
  version = System.env.BUILD_NUMBER != null ? baseVersion + System.env.BUILD_NUMBER : '0-SNAPSHOT'

  uploadArchives {
    repositories {
      mavenDeployer {
        repository(url: "https://build-inera.nordicmedtest.se/nexus/content/repositories/releases") {
          authentication(userName: nexusUsername, password: nexusPassword)
        }
      }
    }
  }

  repositories {
    mavenLocal()
    maven { url "https://build-inera.nordicmedtest.se/nexus/content/repositories/releases/" }
    maven { url "https://build-inera.nordicmedtest.se/nexus/content/repositories/snapshots/" }
    maven { url "https://build-inera.nordicmedtest.se/nexus/content/repositories/thirdparty/" }
    maven { url "http://repo.maven.apache.org/maven2" }
  }
}

subprojects {
  apply plugin: 'java'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  task createVersionPropertyFile(dependsOn: processResources) << {
    def propertyFile = "${buildDir}/resources/main/version.properties"
    ant.touch(file: propertyFile, mkdirs: "true")
    ant.propertyfile(file: propertyFile) {
      entry(key: 'project.version', default: rootProject.version)
      entry(key: 'buildTime', default: new Date())
      entry(key: 'gitCommit', default: "${grgit.head().id}")
      entry(key: 'gitBranch', default: "${grgit.branch.getCurrent().getName()}")
    }
  }

  jar.dependsOn(createVersionPropertyFile)

  dependencies {
    testCompile "junit:junit:4.+"
  }
}

task tagRelease {
  description = 'Tags the current head with the projects version.'
  doLast {
    grgit.tag.add {
      name = version
      message = "Release of ${version}"
    }
    //grgit.push(tags: true)
  }
}
