ext {
    rivtaClinicalprocessVersion = "2.0.RC6.1"
    rivtaEhrLogstoreVersion = "1.2.3"
    rivtaInsuranceprocessVersion = "3.1.0.3"
    rivtaItintegrationMonitoringVersion = "1.0.0.3"
    rivtaHsaAuthorizationmanagementVersion = "1.0.RC4.3"
    rivtaHsaEmployeeVersion = "1.0.RC4.3"
    rivtaHsaOrganizationVersion = "1.1.RC5.3"
    intygClinicalprocessVersion = "1.0.3"
    intygInsuranceprocessVersion = "1.0.3"
    intygTransportstyrelsenVersion = "1.0.3"
    intygPrivatepractitionerVersion = "1.0.3"

    jacksonVersion = "2.8.1"
    jacksonDataformatVersion = "2.4.5"
    springVersion = "4.2.2.RELEASE"
    springSecurityVersion = "4.0.3.RELEASE"
    springSecurityExtensionsVersion = "1.0.1.RELEASE"
    cxfVersion = "3.1.3"
    slf4jVersion = "1.7.21"
    guavaVersion = "14.0.1"
    logbackVersion = "1.0.11"
    opensamlVersion = "2.5.3"
    opensamlOpenwsVersion = "1.4.2-1"
    opensamlXmltoolingVersion = "1.3.2"
    servletApiVersion = "2.5"

    mockitoVersion = "1.9.0"
    servletApiTestVersion = "3.1.0"
}

allprojects  {
    apply plugin: 'maven'
    apply plugin: 'org.ajoberstar.grgit'

    def baseVersion = '3.0.'

    group = 'se.inera.intyg.common'
    version = System.env.BUILD_NUMBER != null ? baseVersion + System.env.BUILD_NUMBER : '0-SNAPSHOT'
}

subprojects {
    apply plugin: 'java'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    task createVersionPropertyFile(dependsOn: processResources) {
        def propertyFile = "${buildDir}/resources/main/version.properties"
        def projectVersion = rootProject.version
        def gitCommit = grgit.head().id
        def gitBranch = grgit.branch.getCurrent().getName()
        def buildNumber = System.env.BUILD_NUMBER

        inputs.property("project.version", projectVersion)
        inputs.property("gitCommit", gitCommit)
        inputs.property("gitBranch", gitBranch)
        inputs.property("buildNumber", buildNumber)
        outputs.file(propertyFile)

        doLast {
            ant.touch(file: propertyFile, mkdirs: "true")
            ant.propertyfile(file: propertyFile) {
                entry(key: 'project.version', default: projectVersion)
                entry(key: 'gitCommit', default: gitCommit)
                entry(key: 'gitBranch', default: gitBranch)
                entry(key: 'buildNumber', default: buildNumber)
            }
        }
    }

    jar.dependsOn(createVersionPropertyFile)

    apply plugin: 'checkstyle'

    checkstyle {
        config = resources.text.fromFile("$rootProject.projectDir/build-tools/src/main/resources/checkstyle/checkstyle.xml")
        ignoreFailures = false
        showViolations = true
    }

    checkstyleMain.onlyIf { project.hasProperty('codeQuality') }
    checkstyleMain.source = "src/main/java" // Explicitly disable generated code
    checkstyleTest.enabled = false

    apply plugin: 'jacoco'

    jacoco {
        toolVersion = "0.7.6.201602180812"
    }

    test {
        jacoco {
            destinationFile = file("$buildDir/jacoco/test.exec")
        }
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: "https://build-inera.nordicmedtest.se/nexus/content/repositories/releases") {
                    authentication(userName: System.properties['nexusUsername'], password: System.properties['nexusPassword'])
                }
            }
        }
    }

    dependencies {
        testCompile "junit:junit:4.+"
    }

    repositories {
        mavenLocal()
        maven { url "https://build-inera.nordicmedtest.se/nexus/content/repositories/releases/" }
        maven { url "https://build-inera.nordicmedtest.se/nexus/content/repositories/snapshots/" }
        maven { url "http://repo.maven.apache.org/maven2" }
    }
}

task tagRelease {
    description = 'Tags the current head with the projects version.'
    doLast {
        grgit.tag.add {
            name = version
            message = "Release of ${version}"
        }
        //grgit.push(tags: true)
    }
}

apply plugin: "org.sonarqube"

sonarqube {
    properties {
        property "sonar.jacoco.reportPath", "$buildDir/jacoco/test.exec"
        property "sonar.projectName", "Intyg Common"
        property "sonar.projectKey", "intyg-common"
        property "sonar.host.url", System.properties['sonarUrl'] ?: "https://build-inera.nordicmedtest.se/sonar"
        property "sonar.test.exclusions", "src/test/**"
        property "sonar.exclusions", [
            "**/stub/**",
            "**/exception/**",
            "**/*Exception*.java",
            "**/templates.js",
            "**/vendor/**"
            ]

        property "sonar.javascript.lcov.reportPath", "build/karma/merged_lcov.info"
    }
}
project(":common-specifications") {
    sonarqube {
        skipProject = true
    }
}

buildscript {
    dependencies {
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.1"
        classpath 'org.ajoberstar:gradle-git:1.5.1'
        classpath 'com.moowork.gradle:gradle-node-plugin:0.12'
        classpath 'com.moowork.gradle:gradle-grunt-plugin:0.12'
    }

    repositories {
        mavenLocal()
        maven { url "https://build-inera.nordicmedtest.se/nexus/content/repositories/releases/" }
        maven { url "https://build-inera.nordicmedtest.se/nexus/content/repositories/snapshots/" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
}
