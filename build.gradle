plugins {
  id 'org.ajoberstar.grgit' version '1.5.1'
  id 'org.sonarqube' version '2.1-rc3'
}

ext.nexusUsername = System.properties['nexusUsername']
ext.nexusPassword = System.properties['nexusPassword']

ext {
  rivtaClinicalprocessVersion = "2.0.RC5.2"
  rivtaEhrLogstoreVersion = "1.2.2"
  rivtaInsuranceprocessVersion = "3.1.0.2"
  rivtaItintegrationMonitoringVersion = "1.0.0.2"
  rivtaHsaAuthorizationmanagementVersion = "1.0.RC4.2"
  rivtaHsaEmployeeVersion = "1.0.RC4.2"
  rivtaHsaOrganizationVersion = "1.1.RC5.2"
  intygClinicalprocessVersion = "1.0.2"
  intygInsuranceprocessVersion = "1.0.2"
  intygTransportstyrelsenVersion = "1.0.2"
  intygPrivatepractitionerVersion = "1.0.2"

  jacksonVersion = "2.8.1"
  jacksonDataformatVersion = "2.4.5"
  springVersion = "4.2.2.RELEASE"
  springSecurityVersion = "4.0.3.RELEASE"
  springSecurityExtensionsVersion = "1.0.1.RELEASE"
  cxfVersion = "3.1.3"
  slf4jVersion = "1.7.5"
  guavaVersion = "14.0.1"
  logbackVersion = "1.0.11"
  opensamlVersion = "2.5.3"
  opensamlOpenwsVersion = "1.4.2-1"
  opensamlXmltoolingVersion = "1.3.2"
  servletApiVersion = "2.5"

  mockitoVersion = "1.9.0"
  servletApiTestVersion = "3.1.0"
}

allprojects  {
  apply plugin: 'maven'
  apply plugin: 'org.ajoberstar.grgit'

  def baseVersion = '0.0.'

  group = 'se.inera.intyg.common'
  version = System.env.BUILD_NUMBER != null ? baseVersion + System.env.BUILD_NUMBER : '0-SNAPSHOT'

  uploadArchives {
    repositories {
      mavenDeployer {
        repository(url: "https://build-inera.nordicmedtest.se/nexus/content/repositories/releases") {
          authentication(userName: nexusUsername, password: nexusPassword)
        }
      }
    }
  }

  buildscript {
    repositories {
      mavenLocal()
      maven { url "https://build-inera.nordicmedtest.se/nexus/content/repositories/snapshots/" }
      maven { url "https://plugins.gradle.org/m2/" }
      jcenter()
    }
  }

  repositories {
    mavenLocal()
    maven { url "https://build-inera.nordicmedtest.se/nexus/content/repositories/releases/" }
    maven { url "https://build-inera.nordicmedtest.se/nexus/content/repositories/snapshots/" }
    maven { url "https://build-inera.nordicmedtest.se/nexus/content/repositories/thirdparty/" }
    maven { url "http://repo.maven.apache.org/maven2" }
  }
}

subprojects {
  apply plugin: 'java'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  task createVersionPropertyFile(dependsOn: processResources) << {
    def propertyFile = "${buildDir}/resources/main/version.properties"
    ant.touch(file: propertyFile, mkdirs: "true")
    ant.propertyfile(file: propertyFile) {
      entry(key: 'project.version', default: rootProject.version)
      entry(key: 'buildTime', default: new Date())
      entry(key: 'gitCommit', default: "${grgit.head().id}")
      entry(key: 'gitBranch', default: "${grgit.branch.getCurrent().getName()}")
    }
  }

  jar.dependsOn(createVersionPropertyFile)

  dependencies {
    testCompile "junit:junit:4.+"
  }

  if (project.hasProperty('codeQuality')) {
    apply plugin: 'checkstyle'
    checkstyle {
      config = resources.text.fromFile("$rootProject.projectDir/build-tools/src/main/resources/checkstyle/checkstyle.xml")
      ignoreFailures = false
      showViolations = true
    }

    checkstyleMain.source = "src/main/java"
    checkstyleTest.enabled = false
  }

  if (project.hasProperty('runSonar')) {
    apply plugin: 'jacoco'
    jacoco {
      toolVersion = "0.7.6.201602180812"
    }
    test {
      jacoco {
        destinationFile = file("$buildDir/jacoco/test.exec")
      }
    }
  }
}

task tagRelease {
  description = 'Tags the current head with the projects version.'
  doLast {
    grgit.tag.add {
      name = version
      message = "Release of ${version}"
    }
    //grgit.push(tags: true)
  }
}

if (project.hasProperty('runSonar')) {
  apply plugin: "org.sonarqube"
  sonarqube {
    properties {
      property "sonar.jacoco.reportPath", "$buildDir/jacoco/test.exec"
      property "sonar.projectName", projectName
      property "sonar.projectKey", projectId

      // Address of SonarQube server
      property "sonar.host.url", "https://build-inera.nordicmedtest.se/sonar"

      //Exclusions
      property "sonar.test.exclusions", "src/test/**"

      property "sonar.exclusions", [
        "**/stub/**",
        "**/exception/**",
        "**/*Exception*.java"
      ]

      //Skip these projects entirely
      project(":common-specifications") {
        sonarqube {
          skipProject = true
        }
      }
    }
  }
}
